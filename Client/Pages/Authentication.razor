@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using ActionBlazor.PushNotifications.Shared

@inject NotificationState notificationState
@inject NavigationManager NavigationManager

<RemoteAuthenticatorViewCore TAuthenticationState="NotificationAuthenticationState"
                             AuthenticationState="RemoteAuthenticationState"
                             OnLogInSucceeded="RestoreNotification"
                             Action="@Action" />

@code{ 

    [Parameter] public string Action { get; set; }

    public NotificationAuthenticationState RemoteAuthenticationState { get; set; } = new NotificationAuthenticationState();

    protected override void OnInitialized()
    {
        if (RemoteAuthenticationActions.IsAction(RemoteAuthenticationActions.LogIn, Action))
        {
            // Preserve the current order so that we don't loose it
            RemoteAuthenticationState.Notification = notificationState.Notification;
        }
    }

    private void RestoreNotification(NotificationAuthenticationState authenticationState)
    {
        if (authenticationState.Notification!= null)
        {
            notificationState.ReplaceNotification(authenticationState.Notification);
        }
    } }
